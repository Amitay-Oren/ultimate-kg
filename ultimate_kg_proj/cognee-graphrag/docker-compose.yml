version: '3.8'

services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15
    container_name: neo4j-cognee
    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_conf:/conf
    networks:
      - cognee-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p password123 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Redis (Optional - for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: redis-cognee
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cognee-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL (Alternative to SQLite for production)
  postgres:
    image: postgres:15
    container_name: postgres-cognee
    environment:
      - POSTGRES_DB=cognee
      - POSTGRES_USER=cognee
      - POSTGRES_PASSWORD=cognee_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - cognee-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cognee -d cognee"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Qdrant Vector Database (Alternative to LanceDB)
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: qdrant-cognee
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - cognee-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_conf:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  cognee-network:
    driver: bridge
    name: cognee-network